openapi: "3.0.2"
info:
  title: Controller Node API
  version: 1.0.0
  description: Controller Node API

tags:
  - name: peers
    description: Peer operations

paths:
  /peers:
    get:
      description: |
        Returns the list of data nodes known to this controller and their peers
      operationId: getPeers
      tags:
        - peers
      responses:
        200:
          description: Array of nodes known to the controller
          content:
            application/json:
              schema:
                type: object
                required:
                  - nodes
                properties:
                  nodes:
                    type: array
                    items:
                      type: object
                      required:
                        - addr
                        - peers
                      properties:
                        addr:
                          $ref: "#/components/schemas/Addr"
                        peers:
                          type: array
                          items:
                            $ref: "#/components/schemas/Addr"
        default:
          description: On error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Message"

    post:
      description: |
        Add a new data node to the list of nodes known and managed by this
        controller
      operationId: postPeers
      tags:
        - peers
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Addr"
      responses:
        200:
          description: Node received
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Message"
        default:
          description: On error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Message"

components:
  schemas:
    Addr:
      type: object
      required:
        - port
      properties:
        ip:
          type: string
          example: "127.0.0.1"
        port:
          type: integer
          minimum: 1
          maximum: 65535
          example: 8080

    Message:
      type: object
      required:
        - message
      properties:
        message:
          type: string
          minLength: 1